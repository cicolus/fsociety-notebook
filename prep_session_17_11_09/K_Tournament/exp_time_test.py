import time as t

if __name__ == '__main__':
    for i in range(40):
        begin = t.time()
        for _ in range(10000):
            x = 2**i
        end = t.time()
        print(end - begin)
        begin = t.time()
        for _ in range(10000):
            x = 1 << i
        end = t.time()
        print(end - begin)
        print("---------------------")

"""
The results below demonstrates that Python implements exponentiation
naively even if the base is 2

0.0011320114135742188
0.001199960708618164
---------------------
0.003520965576171875
0.0012519359588623047
---------------------
0.00391697883605957
0.0013649463653564453
---------------------
0.0037767887115478516
0.001413106918334961
---------------------
0.003448009490966797
0.0011889934539794922
---------------------
0.0038559436798095703
0.0012700557708740234
---------------------
0.003437042236328125
0.0011861324310302734
---------------------
0.003612995147705078
0.0011849403381347656
---------------------
0.003426074981689453
0.0014200210571289062
---------------------
0.003606081008911133
0.001155853271484375
---------------------
0.0036668777465820312
0.001172780990600586
---------------------
0.003820180892944336
0.0011479854583740234
---------------------
0.0040111541748046875
0.0011668205261230469
---------------------
0.0038750171661376953
0.0011818408966064453
---------------------
0.003659963607788086
0.0011529922485351562
---------------------
0.00394892692565918
0.0011529922485351562
---------------------
0.0035219192504882812
0.0011861324310302734
---------------------
0.0038111209869384766
0.0011470317840576172
---------------------
0.0038328170776367188
0.0011708736419677734
---------------------
0.003981113433837891
0.0012199878692626953
---------------------
0.003895998001098633
0.0012459754943847656
---------------------
0.00412297248840332
0.0011830329895019531
---------------------
0.00397801399230957
0.0011529922485351562
---------------------
0.004197835922241211
0.0011510848999023438
---------------------
0.0037250518798828125
0.0011949539184570312
---------------------
0.004050016403198242
0.00115203857421875
---------------------
0.004065036773681641
0.001264810562133789
---------------------
0.004637956619262695
0.0012819766998291016
---------------------
0.0038690567016601562
0.0011539459228515625
---------------------
0.004189968109130859
0.0011551380157470703
---------------------
0.005087137222290039
0.0014190673828125
---------------------
0.004935026168823242
0.0012290477752685547
---------------------
0.003798961639404297
0.0011780261993408203
---------------------
0.004253864288330078
0.0011980533599853516
---------------------
0.003977060317993164
0.0011780261993408203
---------------------
0.004445075988769531
0.0011909008026123047
---------------------
0.0039899349212646484
0.0011839866638183594
---------------------
0.00446009635925293
0.0013570785522460938
---------------------
0.0046269893646240234
0.0012090206146240234
---------------------
0.005614042282104492
0.0015521049499511719
---------------------
"""